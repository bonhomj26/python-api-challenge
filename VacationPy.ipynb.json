{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " VACATIONPY:\n",
    " \n",
    " Narrow down the DataFrame to find your ideal weather condition. For example:\n",
    "\n",
    "  * A max temperature lower than 80 degrees but higher than 70.\n",
    "\n",
    "  * Wind speed less than 10 mph.\n",
    "\n",
    "  * Zero cloudiness.\n",
    "\n",
    "  * Drop any rows that don't contain all three conditions. You want to be sure the weather is ideal.\n",
    "\n",
    "  * **Note:** Feel free to adjust to your specifications but be sure to limit the number of rows returned by your API requests to a reasonable number.\n",
    "\n",
    "* Using Google Places API to find the first hotel for each city located within 5000 meters of your coordinates.\n",
    "\n",
    "* Plot the hotels on top of the humidity heatmap with each pin containing the **Hotel Name**, **City**, and **Country**.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "import gmaps\n",
    "import os\n",
    "import json\n",
    "import time\n",
    "from config import gkey\n",
    "import gmaps.datasets\n",
    "gmaps.configure(gkey)\n",
    "gmaps.configure(api_key=gkey)\n",
    "from __future__ import print_function\n",
    "from ipywidgets import interact, interactive, fixed, interact_manual\n",
    "import ipywidgets as widgets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "gmaps.configure(gkey)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Cloudiness %</th>\n",
       "      <th>Humidity %</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Wind Speed (mph)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>tilichiki</td>\n",
       "      <td>RU</td>\n",
       "      <td>60.47</td>\n",
       "      <td>166.10</td>\n",
       "      <td>65</td>\n",
       "      <td>87</td>\n",
       "      <td>28.40</td>\n",
       "      <td>8.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>chokurdakh</td>\n",
       "      <td>RU</td>\n",
       "      <td>70.63</td>\n",
       "      <td>147.92</td>\n",
       "      <td>100</td>\n",
       "      <td>83</td>\n",
       "      <td>35.67</td>\n",
       "      <td>6.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>bengkulu</td>\n",
       "      <td>ID</td>\n",
       "      <td>-3.80</td>\n",
       "      <td>102.27</td>\n",
       "      <td>56</td>\n",
       "      <td>87</td>\n",
       "      <td>75.47</td>\n",
       "      <td>4.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mataura</td>\n",
       "      <td>NZ</td>\n",
       "      <td>-46.19</td>\n",
       "      <td>168.86</td>\n",
       "      <td>100</td>\n",
       "      <td>93</td>\n",
       "      <td>41.00</td>\n",
       "      <td>3.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ushuaia</td>\n",
       "      <td>AR</td>\n",
       "      <td>-54.80</td>\n",
       "      <td>-68.30</td>\n",
       "      <td>75</td>\n",
       "      <td>43</td>\n",
       "      <td>51.80</td>\n",
       "      <td>13.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>kaeo</td>\n",
       "      <td>NZ</td>\n",
       "      <td>-35.10</td>\n",
       "      <td>173.78</td>\n",
       "      <td>43</td>\n",
       "      <td>96</td>\n",
       "      <td>55.00</td>\n",
       "      <td>1.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>borsele</td>\n",
       "      <td>NL</td>\n",
       "      <td>51.44</td>\n",
       "      <td>3.81</td>\n",
       "      <td>99</td>\n",
       "      <td>87</td>\n",
       "      <td>52.93</td>\n",
       "      <td>29.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>raymond</td>\n",
       "      <td>US</td>\n",
       "      <td>43.90</td>\n",
       "      <td>-70.47</td>\n",
       "      <td>0</td>\n",
       "      <td>48</td>\n",
       "      <td>68.74</td>\n",
       "      <td>1.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>bolotnoye</td>\n",
       "      <td>RU</td>\n",
       "      <td>55.67</td>\n",
       "      <td>84.40</td>\n",
       "      <td>98</td>\n",
       "      <td>96</td>\n",
       "      <td>42.24</td>\n",
       "      <td>8.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>616</th>\n",
       "      <td>ruteng</td>\n",
       "      <td>ID</td>\n",
       "      <td>-8.61</td>\n",
       "      <td>120.47</td>\n",
       "      <td>52</td>\n",
       "      <td>87</td>\n",
       "      <td>61.66</td>\n",
       "      <td>1.66</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>617 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           City Country  Latitude  Longitude  Cloudiness %  Humidity %  \\\n",
       "0     tilichiki      RU     60.47     166.10            65          87   \n",
       "1    chokurdakh      RU     70.63     147.92           100          83   \n",
       "2      bengkulu      ID     -3.80     102.27            56          87   \n",
       "3       mataura      NZ    -46.19     168.86           100          93   \n",
       "4       ushuaia      AR    -54.80     -68.30            75          43   \n",
       "..          ...     ...       ...        ...           ...         ...   \n",
       "612        kaeo      NZ    -35.10     173.78            43          96   \n",
       "613     borsele      NL     51.44       3.81            99          87   \n",
       "614     raymond      US     43.90     -70.47             0          48   \n",
       "615   bolotnoye      RU     55.67      84.40            98          96   \n",
       "616      ruteng      ID     -8.61     120.47            52          87   \n",
       "\n",
       "     Temperature  Wind Speed (mph)  \n",
       "0          28.40              8.99  \n",
       "1          35.67              6.98  \n",
       "2          75.47              4.61  \n",
       "3          41.00              3.09  \n",
       "4          51.80             13.87  \n",
       "..           ...               ...  \n",
       "612        55.00              1.57  \n",
       "613        52.93             29.97  \n",
       "614        68.74              1.01  \n",
       "615        42.24              8.93  \n",
       "616        61.66              1.66  \n",
       "\n",
       "[617 rows x 8 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the CSV file\n",
    "weather_data = pd.read_csv(\"../Resources/output_data/cities.csv\")\n",
    "weather_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "               *** PROBLEM DISPLAYING THE MAP***\n",
    "               DIPLAY: \"LOADING WIDGET...\n",
    "               \n",
    "* Note: I have installed all the extensions (see below) for the jupyter lab, as suggested in the class, and I am still having issue displaying the map.\n",
    "\n",
    "    Please provide feedback as to how to get the map displayed.\n",
    "\n",
    "* The extensions below were recomended during class.\n",
    "\n",
    "1.  Install gmaps  conda install -c conda-forge gmaps\n",
    "2.  Install nodejs  conda install nodejs\n",
    "3.  Enable JupyterLab extensions:  jupyter labextension install @jupyter-widgets/jupyterlab-manager\n",
    "4.  Build jupyter lab  jupyter lab build\n",
    "    --  Teacher's note: Jupyter Lab did not work for me, so also set up on Jupyter Notebooks:\n",
    "5.  enable extensions jupyter nbextension enable --py --sys-prefix widgetsnbextension\n",
    "6.  load extension  jupyter nbextension enable --py --sys-prefix gmaps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "cba37074ca084e0588af10d9ba2a7ed7",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Figure(layout=FigureLayout(height='420px'))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# First option to generate the map\n",
    "locations = weather_data[['Latitude', 'Longitude']]\n",
    "weights = weather_data['Humidity %']\n",
    "fig = gmaps.figure()\n",
    "#fig = gmaps.figure(map_type = 'SATELLITE')\n",
    "fig.add_layer(gmaps.heatmap_layer(locations, weights=weights))\n",
    "fig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Second Option to generate the map\n",
    "# Configure gmaps\n",
    "gmaps.configure(gkey)\n",
    "\n",
    "# Store latitude and longitude in locations\n",
    "locations = weather_data[[\"Latitude\", \"Longitude\"]]\n",
    "\n",
    "# Store Humidity in humidity\n",
    "humidity = weather_data[\"Humidity %\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1745ee4e883640fcabe1f22066cfafae",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Figure(layout=FigureLayout(height='420px'))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate the  Heatmap\n",
    "fig = gmaps.figure(center=(46.0, -5.0), zoom_level=2)\n",
    "max_intensity = np.max(humidity)\n",
    "\n",
    "# Create heat layer\n",
    "heat_layer = gmaps.heatmap_layer(locations, weights = humidity, dissipating=False, max_intensity=100, point_radius=3)\n",
    "\n",
    "# Add layer\n",
    "fig=gmaps.figure()\n",
    "fig.add_layer(heat_layer)\n",
    "\n",
    "# Display figure\n",
    "fig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Cloudiness %</th>\n",
       "      <th>Humidity %</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Wind Speed (mph)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>albany</td>\n",
       "      <td>US</td>\n",
       "      <td>42.60</td>\n",
       "      <td>-73.97</td>\n",
       "      <td>0</td>\n",
       "      <td>57</td>\n",
       "      <td>78.53</td>\n",
       "      <td>3.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>goderich</td>\n",
       "      <td>CA</td>\n",
       "      <td>43.75</td>\n",
       "      <td>-81.72</td>\n",
       "      <td>0</td>\n",
       "      <td>87</td>\n",
       "      <td>72.84</td>\n",
       "      <td>1.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>clyde river</td>\n",
       "      <td>US</td>\n",
       "      <td>41.30</td>\n",
       "      <td>-82.98</td>\n",
       "      <td>0</td>\n",
       "      <td>51</td>\n",
       "      <td>78.69</td>\n",
       "      <td>7.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>middelburg</td>\n",
       "      <td>ZA</td>\n",
       "      <td>-25.78</td>\n",
       "      <td>29.46</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>74.01</td>\n",
       "      <td>6.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>gimli</td>\n",
       "      <td>CA</td>\n",
       "      <td>50.63</td>\n",
       "      <td>-96.99</td>\n",
       "      <td>0</td>\n",
       "      <td>69</td>\n",
       "      <td>75.45</td>\n",
       "      <td>8.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>pinhao</td>\n",
       "      <td>BR</td>\n",
       "      <td>-25.70</td>\n",
       "      <td>-51.66</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>79.99</td>\n",
       "      <td>5.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>coruripe</td>\n",
       "      <td>BR</td>\n",
       "      <td>-10.13</td>\n",
       "      <td>-36.18</td>\n",
       "      <td>0</td>\n",
       "      <td>66</td>\n",
       "      <td>78.57</td>\n",
       "      <td>9.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>chiredzi</td>\n",
       "      <td>ZW</td>\n",
       "      <td>-21.05</td>\n",
       "      <td>31.67</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>77.25</td>\n",
       "      <td>5.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>iranshahr</td>\n",
       "      <td>IR</td>\n",
       "      <td>27.20</td>\n",
       "      <td>60.68</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>78.80</td>\n",
       "      <td>4.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>nokaneng</td>\n",
       "      <td>BW</td>\n",
       "      <td>-19.67</td>\n",
       "      <td>22.27</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>79.39</td>\n",
       "      <td>6.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>trelew</td>\n",
       "      <td>AR</td>\n",
       "      <td>-43.25</td>\n",
       "      <td>-65.31</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>70.41</td>\n",
       "      <td>6.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>399</th>\n",
       "      <td>serik</td>\n",
       "      <td>TR</td>\n",
       "      <td>36.92</td>\n",
       "      <td>31.10</td>\n",
       "      <td>0</td>\n",
       "      <td>78</td>\n",
       "      <td>77.00</td>\n",
       "      <td>5.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>419</th>\n",
       "      <td>kumluca</td>\n",
       "      <td>TR</td>\n",
       "      <td>36.37</td>\n",
       "      <td>30.29</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>78.19</td>\n",
       "      <td>5.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>482</th>\n",
       "      <td>marzuq</td>\n",
       "      <td>YE</td>\n",
       "      <td>14.40</td>\n",
       "      <td>46.47</td>\n",
       "      <td>0</td>\n",
       "      <td>48</td>\n",
       "      <td>79.38</td>\n",
       "      <td>3.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>dahuk</td>\n",
       "      <td>IQ</td>\n",
       "      <td>36.87</td>\n",
       "      <td>42.99</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>72.57</td>\n",
       "      <td>3.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>534</th>\n",
       "      <td>caravelas</td>\n",
       "      <td>BR</td>\n",
       "      <td>-17.71</td>\n",
       "      <td>-39.25</td>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>75.74</td>\n",
       "      <td>6.64</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            City Country  Latitude  Longitude  Cloudiness %  Humidity %  \\\n",
       "20        albany      US     42.60     -73.97             0          57   \n",
       "65      goderich      CA     43.75     -81.72             0          87   \n",
       "66   clyde river      US     41.30     -82.98             0          51   \n",
       "76    middelburg      ZA    -25.78      29.46             0          25   \n",
       "82         gimli      CA     50.63     -96.99             0          69   \n",
       "144       pinhao      BR    -25.70     -51.66             0          35   \n",
       "156     coruripe      BR    -10.13     -36.18             0          66   \n",
       "242     chiredzi      ZW    -21.05      31.67             0          21   \n",
       "351    iranshahr      IR     27.20      60.68             0           9   \n",
       "358     nokaneng      BW    -19.67      22.27             0          17   \n",
       "396       trelew      AR    -43.25     -65.31             0          23   \n",
       "399        serik      TR     36.92      31.10             0          78   \n",
       "419      kumluca      TR     36.37      30.29             0          56   \n",
       "482       marzuq      YE     14.40      46.47             0          48   \n",
       "490        dahuk      IQ     36.87      42.99             0          33   \n",
       "534    caravelas      BR    -17.71     -39.25             0          72   \n",
       "\n",
       "     Temperature  Wind Speed (mph)  \n",
       "20         78.53              3.85  \n",
       "65         72.84              1.01  \n",
       "66         78.69              7.65  \n",
       "76         74.01              6.40  \n",
       "82         75.45              8.01  \n",
       "144        79.99              5.41  \n",
       "156        78.57              9.73  \n",
       "242        77.25              5.17  \n",
       "351        78.80              4.70  \n",
       "358        79.39              6.15  \n",
       "396        70.41              6.49  \n",
       "399        77.00              5.82  \n",
       "419        78.19              5.39  \n",
       "482        79.38              3.44  \n",
       "490        72.57              3.18  \n",
       "534        75.74              6.64  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Cities with wind speed less than 10 mph, cloudiness equals to 0 and max temp between 60 and 80\n",
    "reduced_data = weather_data.loc[(weather_data[\"Wind Speed (mph)\"] <= 10) & (weather_data[\"Cloudiness %\"] == 0) & \\\n",
    "                                   (weather_data[\"Temperature\"] >= 70) & (weather_data[\"Temperature\"] <= 80)].dropna()\n",
    "\n",
    "reduced_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Hotel Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>albany</td>\n",
       "      <td>US</td>\n",
       "      <td>42.60</td>\n",
       "      <td>-73.97</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>goderich</td>\n",
       "      <td>CA</td>\n",
       "      <td>43.75</td>\n",
       "      <td>-81.72</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>clyde river</td>\n",
       "      <td>US</td>\n",
       "      <td>41.30</td>\n",
       "      <td>-82.98</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>middelburg</td>\n",
       "      <td>ZA</td>\n",
       "      <td>-25.78</td>\n",
       "      <td>29.46</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>gimli</td>\n",
       "      <td>CA</td>\n",
       "      <td>50.63</td>\n",
       "      <td>-96.99</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>pinhao</td>\n",
       "      <td>BR</td>\n",
       "      <td>-25.70</td>\n",
       "      <td>-51.66</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>coruripe</td>\n",
       "      <td>BR</td>\n",
       "      <td>-10.13</td>\n",
       "      <td>-36.18</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>chiredzi</td>\n",
       "      <td>ZW</td>\n",
       "      <td>-21.05</td>\n",
       "      <td>31.67</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>iranshahr</td>\n",
       "      <td>IR</td>\n",
       "      <td>27.20</td>\n",
       "      <td>60.68</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>nokaneng</td>\n",
       "      <td>BW</td>\n",
       "      <td>-19.67</td>\n",
       "      <td>22.27</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>trelew</td>\n",
       "      <td>AR</td>\n",
       "      <td>-43.25</td>\n",
       "      <td>-65.31</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>399</th>\n",
       "      <td>serik</td>\n",
       "      <td>TR</td>\n",
       "      <td>36.92</td>\n",
       "      <td>31.10</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>419</th>\n",
       "      <td>kumluca</td>\n",
       "      <td>TR</td>\n",
       "      <td>36.37</td>\n",
       "      <td>30.29</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>482</th>\n",
       "      <td>marzuq</td>\n",
       "      <td>YE</td>\n",
       "      <td>14.40</td>\n",
       "      <td>46.47</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>dahuk</td>\n",
       "      <td>IQ</td>\n",
       "      <td>36.87</td>\n",
       "      <td>42.99</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>534</th>\n",
       "      <td>caravelas</td>\n",
       "      <td>BR</td>\n",
       "      <td>-17.71</td>\n",
       "      <td>-39.25</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            City Country  Latitude  Longitude Hotel Name\n",
       "20        albany      US     42.60     -73.97           \n",
       "65      goderich      CA     43.75     -81.72           \n",
       "66   clyde river      US     41.30     -82.98           \n",
       "76    middelburg      ZA    -25.78      29.46           \n",
       "82         gimli      CA     50.63     -96.99           \n",
       "144       pinhao      BR    -25.70     -51.66           \n",
       "156     coruripe      BR    -10.13     -36.18           \n",
       "242     chiredzi      ZW    -21.05      31.67           \n",
       "351    iranshahr      IR     27.20      60.68           \n",
       "358     nokaneng      BW    -19.67      22.27           \n",
       "396       trelew      AR    -43.25     -65.31           \n",
       "399        serik      TR     36.92      31.10           \n",
       "419      kumluca      TR     36.37      30.29           \n",
       "482       marzuq      YE     14.40      46.47           \n",
       "490        dahuk      IQ     36.87      42.99           \n",
       "534    caravelas      BR    -17.71     -39.25           "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a hotel_df\n",
    "hotel_data = reduced_data.loc[:,[\"City\",\"Country\", \"Latitude\", \"Longitude\"]]\n",
    "\n",
    "# Add a \"Hotel Name\" column to the DataFrame.\n",
    "hotel_data[\"Hotel Name\"] = \"\"\n",
    "\n",
    "# Display the result\n",
    "hotel_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "base_url = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\"\n",
    "\n",
    "params = {\"type\" : \"hotel\",\n",
    "          \"keyword\" : \"hotel\",\n",
    "          \"radius\" : 5000,\n",
    "          \"key\" : gkey}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Retrieving Results for Index 20: albany.\n",
      "Missing field/result... skipping.\n",
      "------------\n",
      "Retrieving Results for Index 65: goderich.\n",
      "Closest hotel in goderich is Comfort Inn & Suites.\n",
      "------------\n",
      "Retrieving Results for Index 66: clyde river.\n",
      "Closest hotel in clyde river is Red Roof Inn Clyde.\n",
      "------------\n",
      "Retrieving Results for Index 76: middelburg.\n",
      "Closest hotel in middelburg is Alveston Manor Small Hotel.\n",
      "------------\n",
      "Retrieving Results for Index 82: gimli.\n",
      "Closest hotel in gimli is Lakeview Gimli Resort.\n",
      "------------\n",
      "Retrieving Results for Index 144: pinhao.\n",
      "Closest hotel in pinhao is PinhÃ£o Park Hotel.\n",
      "------------\n",
      "Retrieving Results for Index 156: coruripe.\n",
      "Closest hotel in coruripe is Pousada Pontal Sunset.\n",
      "------------\n",
      "Retrieving Results for Index 242: chiredzi.\n",
      "Closest hotel in chiredzi is The Nesbitt Arms.\n",
      "------------\n",
      "Retrieving Results for Index 351: iranshahr.\n",
      "Closest hotel in iranshahr is Ù‡ØªÙ„ Ùˆ Ø±Ø³ØªÙˆØ±Ø§Ù† Ù‚ØµØ±.\n",
      "------------\n",
      "Retrieving Results for Index 358: nokaneng.\n",
      "Missing field/result... skipping.\n",
      "------------\n",
      "Retrieving Results for Index 396: trelew.\n",
      "Closest hotel in trelew is Apart Hotel Argenta.\n",
      "------------\n",
      "Retrieving Results for Index 399: serik.\n",
      "Missing field/result... skipping.\n",
      "------------\n",
      "Retrieving Results for Index 419: kumluca.\n",
      "Closest hotel in kumluca is TurkuazKÃ¶y.\n",
      "------------\n",
      "Retrieving Results for Index 482: marzuq.\n",
      "Missing field/result... skipping.\n",
      "------------\n",
      "Retrieving Results for Index 490: dahuk.\n",
      "Closest hotel in dahuk is Dilshad Palace.\n",
      "------------\n",
      "Retrieving Results for Index 534: caravelas.\n",
      "Closest hotel in caravelas is Pousada Encanto Abrolhos.\n",
      "------------\n",
      "-------End of Search-------\n"
     ]
    }
   ],
   "source": [
    "for index, row in hotel_data.iterrows():\n",
    "    # get city name, lat, lnt from df\n",
    "    lat = row[\"Latitude\"]\n",
    "    lng = row[\"Longitude\"]\n",
    "    city_name = row[\"City\"]\n",
    "    \n",
    "    # add keyword to params dict\n",
    "    params[\"location\"] = f\"{lat},{lng}\"\n",
    "\n",
    "    # assemble url and make API request\n",
    "    print(f\"Retrieving Results for Index {index}: {city_name}.\")\n",
    "    response = requests.get(base_url, params=params).json()\n",
    "    \n",
    "    # extract results\n",
    "    results = response['results']\n",
    "    \n",
    "    # save the hotel name to dataframe\n",
    "    try:\n",
    "        print(f\"Closest hotel in {city_name} is {results[0]['name']}.\")\n",
    "        hotel_data.loc[index, \"Hotel Name\"] = results[0]['name']\n",
    "\n",
    "    # if there is no hotel available, show missing field\n",
    "    except (KeyError, IndexError):\n",
    "        print(\"Missing field/result... skipping.\")\n",
    "        \n",
    "    print(\"------------\")\n",
    "    \n",
    "    # Wait 1 sec to make another api request to avoid SSL Error\n",
    "    time.sleep(1)\n",
    "\n",
    "# Print end of search once searching is completed\n",
    "print(\"-------End of Search-------\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Hotel Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>albany</td>\n",
       "      <td>US</td>\n",
       "      <td>42.60</td>\n",
       "      <td>-73.97</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>goderich</td>\n",
       "      <td>CA</td>\n",
       "      <td>43.75</td>\n",
       "      <td>-81.72</td>\n",
       "      <td>Comfort Inn &amp; Suites</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>clyde river</td>\n",
       "      <td>US</td>\n",
       "      <td>41.30</td>\n",
       "      <td>-82.98</td>\n",
       "      <td>Red Roof Inn Clyde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>middelburg</td>\n",
       "      <td>ZA</td>\n",
       "      <td>-25.78</td>\n",
       "      <td>29.46</td>\n",
       "      <td>Alveston Manor Small Hotel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>gimli</td>\n",
       "      <td>CA</td>\n",
       "      <td>50.63</td>\n",
       "      <td>-96.99</td>\n",
       "      <td>Lakeview Gimli Resort</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>pinhao</td>\n",
       "      <td>BR</td>\n",
       "      <td>-25.70</td>\n",
       "      <td>-51.66</td>\n",
       "      <td>PinhÃ£o Park Hotel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>coruripe</td>\n",
       "      <td>BR</td>\n",
       "      <td>-10.13</td>\n",
       "      <td>-36.18</td>\n",
       "      <td>Pousada Pontal Sunset</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>chiredzi</td>\n",
       "      <td>ZW</td>\n",
       "      <td>-21.05</td>\n",
       "      <td>31.67</td>\n",
       "      <td>The Nesbitt Arms</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>iranshahr</td>\n",
       "      <td>IR</td>\n",
       "      <td>27.20</td>\n",
       "      <td>60.68</td>\n",
       "      <td>Ù‡ØªÙ„ Ùˆ Ø±Ø³ØªÙˆØ±Ø§Ù† Ù‚ØµØ±</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>nokaneng</td>\n",
       "      <td>BW</td>\n",
       "      <td>-19.67</td>\n",
       "      <td>22.27</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>trelew</td>\n",
       "      <td>AR</td>\n",
       "      <td>-43.25</td>\n",
       "      <td>-65.31</td>\n",
       "      <td>Apart Hotel Argenta</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>399</th>\n",
       "      <td>serik</td>\n",
       "      <td>TR</td>\n",
       "      <td>36.92</td>\n",
       "      <td>31.10</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>419</th>\n",
       "      <td>kumluca</td>\n",
       "      <td>TR</td>\n",
       "      <td>36.37</td>\n",
       "      <td>30.29</td>\n",
       "      <td>TurkuazKÃ¶y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>482</th>\n",
       "      <td>marzuq</td>\n",
       "      <td>YE</td>\n",
       "      <td>14.40</td>\n",
       "      <td>46.47</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>dahuk</td>\n",
       "      <td>IQ</td>\n",
       "      <td>36.87</td>\n",
       "      <td>42.99</td>\n",
       "      <td>Dilshad Palace</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>534</th>\n",
       "      <td>caravelas</td>\n",
       "      <td>BR</td>\n",
       "      <td>-17.71</td>\n",
       "      <td>-39.25</td>\n",
       "      <td>Pousada Encanto Abrolhos</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            City Country  Latitude  Longitude                  Hotel Name\n",
       "20        albany      US     42.60     -73.97                            \n",
       "65      goderich      CA     43.75     -81.72        Comfort Inn & Suites\n",
       "66   clyde river      US     41.30     -82.98          Red Roof Inn Clyde\n",
       "76    middelburg      ZA    -25.78      29.46  Alveston Manor Small Hotel\n",
       "82         gimli      CA     50.63     -96.99       Lakeview Gimli Resort\n",
       "144       pinhao      BR    -25.70     -51.66           PinhÃ£o Park Hotel\n",
       "156     coruripe      BR    -10.13     -36.18       Pousada Pontal Sunset\n",
       "242     chiredzi      ZW    -21.05      31.67            The Nesbitt Arms\n",
       "351    iranshahr      IR     27.20      60.68           Ù‡ØªÙ„ Ùˆ Ø±Ø³ØªÙˆØ±Ø§Ù† Ù‚ØµØ±\n",
       "358     nokaneng      BW    -19.67      22.27                            \n",
       "396       trelew      AR    -43.25     -65.31         Apart Hotel Argenta\n",
       "399        serik      TR     36.92      31.10                            \n",
       "419      kumluca      TR     36.37      30.29                  TurkuazKÃ¶y\n",
       "482       marzuq      YE     14.40      46.47                            \n",
       "490        dahuk      IQ     36.87      42.99              Dilshad Palace\n",
       "534    caravelas      BR    -17.71     -39.25    Pousada Encanto Abrolhos"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display the hotel dataframe\n",
    "hotel_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using the template add the hotel marks to the heatmap\n",
    "info_box_template = \"\"\"\n",
    "<dl>\n",
    "<dt>Name</dt><dd>{Hotel Name}</dd>\n",
    "<dt>City</dt><dd>{City}</dd>\n",
    "<dt>Country</dt><dd>{Country}</dd>\n",
    "</dl>\n",
    "\"\"\"\n",
    "# Store the DataFrame Row\n",
    "#hotel_info = [info_box_template.format(**row) for index, row in narrowed_city_df.iterrows()]\n",
    "hotel_info = [info_box_template.format(**row) for index, row in hotel_data.iterrows()]\n",
    "locations = hotel_data[[\"Latitude\", \"Longitude\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1745ee4e883640fcabe1f22066cfafae",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Figure(layout=FigureLayout(height='420px'))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Add marker layer and info box content ontop of heat map\n",
    "markers = gmaps.marker_layer(locations, info_box_content = hotel_info)\n",
    "\n",
    "# Add the layer to the map\n",
    "fig.add_layer(markers)\n",
    "\n",
    "# Display Map\n",
    "fig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
